{"ast":null,"code":"export const mocks = Array.from({\n  length: 161\n}, (v, i) => i).map(val => ({\n  header: `This is the header ${val + 1}`,\n  content: `This is the item ${val + 1}`\n}));\nconst promise = () => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(mocks);\n  }, 1500);\n});\nexport { promise };","map":{"version":3,"names":["mocks","Array","from","length","v","i","map","val","header","content","promise","Promise","resolve","setTimeout"],"sources":["/Users/macbookpro/Desktop/reviewknowledge/react/nodebox/src/mocks.ts"],"sourcesContent":["export const mocks = Array.from({ length: 161 }, (v, i) => i).map((val) => ({\n  header: `This is the header ${val + 1}`,\n  content: `This is the item ${val + 1}`,\n}));\n\nconst promise: Promise<Array<MockData>> =()=> new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(mocks);\n  }, 1500);\n});\n\ntype MockData = {\n  header: string;\n  content: string;\n};\nexport { promise, MockData };\n"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAE;AAAI,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,KAAM;EAC1EC,MAAM,EAAE,sBAAsBD,GAAG,GAAG,CAAC,EAAE;EACvCE,OAAO,EAAE,oBAAoBF,GAAG,GAAG,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,MAAMG,OAAiC,GAAEA,CAAA,KAAK,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACrEC,UAAU,CAAC,MAAM;IACfD,OAAO,CAACZ,KAAK,CAAC;EAChB,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,CAAC;AAMF,SAASU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}